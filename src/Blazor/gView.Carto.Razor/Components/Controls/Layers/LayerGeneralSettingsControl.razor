@if (Layer != null)
{
    <GvCard Title="Feature Rendering">
        <GvCardContent>
            <MudSelect T="bool" @bind-Value="_renderAtAllScales">
                <MudSelectItem Value="true">Render layer at all scales</MudSelectItem>
                <MudSelectItem Value="false">Render layer between scales</MudSelectItem>
            </MudSelect>
            
            @if(_renderAtAllScales == false) 
            {
                Layer.MinimumScale = Math.Abs(Layer.MinimumScale);
                Layer.MaximumScale = Math.Abs(Layer.MaximumScale);

                <MudNumericField Label="Minimum Scale 1:  (higher scale dominator)"
                                 @bind-Value="Layer.MaximumScale"/>
                <MudNumericField Label="Maximum Scale 1:  (lower scale dominator)"
                                 @bind-Value="Layer.MinimumScale"/>
                @GvUtilities.InfoText("<=0 means: ignore this scale level")
            } 
            else 
            {
                Layer.MinimumScale = -Math.Abs(Layer.MinimumScale);
                Layer.MaximumScale = -Math.Abs(Layer.MaximumScale);
            }

            @if (Layer is IFeatureLayer fLayer) 
            {
                <MudSelect T="RefScaleBehavior"
                           Value="_renderRefScaleBehavior"
                           ValueChanged="RenderRefScaleBehaviorChanged"
                           Label="Reference Scale Behavior">
                    <MudSelectItem Value="RefScaleBehavior.IgnoreRefScale">Do not apply reference scale</MudSelectItem>
                    <MudSelectItem Value="RefScaleBehavior.ApplyRefScale">Apply reference scale</MudSelectItem>
                    <MudSelectItem Value="RefScaleBehavior.ApplyRefScaleWithMaxUpscale">Apply reference scale (max scale up)</MudSelectItem>
                </MudSelect>
                @if (_renderRefScaleBehavior == RefScaleBehavior.ApplyRefScaleWithMaxUpscale)
                {
                    fLayer.MaxRefScaleFactor = Math.Max(1f, fLayer.MaxRefScaleFactor);

                    <MudSlider T="float" Min="1f" Max="5f" Step="0.1f"
                               @bind-Value="fLayer.MaxRefScaleFactor"
                               Color="Color.Info">
                               @($"{Math.Round((fLayer.MaxRefScaleFactor - 1f) * 100f)}% / {Math.Round(fLayer.MaxRefScaleFactor, 1)}x")
                    </MudSlider>
                }
            }
        </GvCardContent>
    </GvCard>

    @if((Layer is IFeatureLayer fLayer && fLayer.LabelRenderer is not null) || Layer is IGroupLayer) {
        <GvCard Title="Labelling">
            <GvCardContent>
                <MudSelect T="bool" @bind-Value="_labelAtAllScales">
                    <MudSelectItem Value="true">Label layer at all scales</MudSelectItem>
                    <MudSelectItem Value="false">Label layer between scales</MudSelectItem>
                </MudSelect>
                
                @if(_labelAtAllScales == false) {
                    Layer.MinimumLabelScale = Math.Abs(Layer.MinimumLabelScale);
                    Layer.MaximumLabelScale = Math.Abs(Layer.MaximumLabelScale);

                    <MudNumericField Label="Minimun Scale 1:   (higher scale dominator)"
                                     @bind-Value="Layer.MaximumLabelScale" />
                    <MudNumericField Label="Maximum Scale 1:   (lower scale dominator)"
                                     @bind-Value="Layer.MinimumLabelScale" />
                    @GvUtilities.InfoText("<=0 means: ignore this scale level")
                } 
                else {
                    Layer.MinimumLabelScale = -Math.Abs(Layer.MinimumLabelScale);
                    Layer.MaximumLabelScale = -Math.Abs(Layer.MaximumLabelScale);
                }

                @if (Layer is IFeatureLayer fLayer)
                {
                    <MudSelect T="RefScaleBehavior"
                               Value="_labelRefScaleBehavior"
                               ValueChanged="LabelRefScaleBehaviorChanged"
                               Label="Reference Scale Behavior">
                        <MudSelectItem Value="RefScaleBehavior.IgnoreRefScale">Do not apply reference scale</MudSelectItem>
                        <MudSelectItem Value="RefScaleBehavior.ApplyRefScale">Apply reference scale</MudSelectItem>
                        <MudSelectItem Value="RefScaleBehavior.ApplyRefScaleWithMaxUpscale">Apply reference scale (max scale up)</MudSelectItem>
                    </MudSelect>
                    @if (_labelRefScaleBehavior == RefScaleBehavior.ApplyRefScaleWithMaxUpscale)
                    {
                        fLayer.MaxLabelRefScaleFactor = Math.Max(1f, fLayer.MaxLabelRefScaleFactor);

                        <MudSlider T="float" Min="1f" Max="5f" Step="0.1f"
                                   @bind-Value="fLayer.MaxLabelRefScaleFactor"
                                   Color="Color.Info">
                            @($"{Math.Round((fLayer.MaxLabelRefScaleFactor - 1f) * 100f)}% / {Math.Round(fLayer.MaxLabelRefScaleFactor, 1)}x")
                        </MudSlider>
                    }
                }
            </GvCardContent>
        </GvCard>
    }

    <GvCard Title="Advanced">
        <GvCardContent>
            <MudNumericField Label="Maximum scale after zooming to this layers features 1:"
                             @bind-Value="Layer.MaximumZoomToFeatureScale" />
            @GvUtilities.InfoText("<=0 means: ignore this value")

            @if (Layer.Class is IFeatureClass fClass)
            {
                <MudSelect T="GeometryType" Value="fClass.GeometryType" ReadOnly="true" Label="Geometry Type">
                    @(GvUtilities.EnumToSelectItems<GeometryType>())
                </MudSelect>
            }
        </GvCardContent>
    </GvCard> 
}

@code {
    [Parameter] 
    public ILayer? Layer { get; set; }

    private bool _renderAtAllScales;
    private bool _labelAtAllScales;

    private enum RefScaleBehavior
    {
        IgnoreRefScale = -1,
        ApplyRefScale = 0,
        ApplyRefScaleWithMaxUpscale = 1
    }

    private RefScaleBehavior _renderRefScaleBehavior;
    private RefScaleBehavior _labelRefScaleBehavior;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (Layer is not null)
        {
            _renderAtAllScales = Layer.MinimumScale <= 0 && Layer.MaximumScale <= 0;
            _labelAtAllScales = Layer.MinimumLabelScale <= 0 && Layer.MaximumLabelScale <= 0;
        }

        if(Layer is IFeatureLayer fLayer)
        {
            _renderRefScaleBehavior = fLayer switch
            {
                { ApplyRefScale: false } => RefScaleBehavior.IgnoreRefScale,
                { MaxRefScaleFactor: >= 1f} => RefScaleBehavior.ApplyRefScaleWithMaxUpscale,
                { ApplyRefScale: true } => RefScaleBehavior.ApplyRefScale
            };

            _labelRefScaleBehavior = fLayer switch
            {
                { ApplyLabelRefScale: false } => RefScaleBehavior.IgnoreRefScale,
                { MaxLabelRefScaleFactor: >= 1f } => RefScaleBehavior.ApplyRefScaleWithMaxUpscale,
                { ApplyLabelRefScale: true } => RefScaleBehavior.ApplyRefScale
            };
        }
    }

    private void RenderRefScaleBehaviorChanged(RefScaleBehavior refScaleBehavior)
    {
        if(Layer is IFeatureLayer fLayer)
        {
            _renderRefScaleBehavior = refScaleBehavior;

            switch(refScaleBehavior)
            {
                case RefScaleBehavior.IgnoreRefScale:
                    fLayer.ApplyRefScale = false;
                    fLayer.MaxRefScaleFactor = 0f;
                    break;
                case RefScaleBehavior.ApplyRefScale:
                    fLayer.ApplyRefScale = true;
                    fLayer.MaxRefScaleFactor = 0f;
                    break;
                case RefScaleBehavior.ApplyRefScaleWithMaxUpscale:
                    fLayer.ApplyRefScale = true;
                    break;
            }
        }
    }

    private void LabelRefScaleBehaviorChanged(RefScaleBehavior refScaleBehavior)
    {
        if (Layer is IFeatureLayer fLayer)
        {
            _labelRefScaleBehavior = refScaleBehavior;

            switch (refScaleBehavior)
            {
                case RefScaleBehavior.IgnoreRefScale:
                    fLayer.ApplyLabelRefScale = false;
                    fLayer.MaxLabelRefScaleFactor = 0f;
                    break;
                case RefScaleBehavior.ApplyRefScale:
                    fLayer.ApplyLabelRefScale = true;
                    fLayer.MaxLabelRefScaleFactor = 0f;
                    break;
                case RefScaleBehavior.ApplyRefScaleWithMaxUpscale:
                    fLayer.ApplyLabelRefScale = true;
                    break;
            }
        }
    }
}