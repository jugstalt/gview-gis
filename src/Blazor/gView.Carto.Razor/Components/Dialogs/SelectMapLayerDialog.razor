@inherits ModalDialogFormBase<SelectMapLayerDialogModel>

<ModalDialogFormBase T="SelectMapLayerDialogModel"
                     OnDialogClose="base.OnDialogClose"
                     Model="base.Model">
    <DialogBody>    
        
        <MudList T="ITocElement"
                 SelectedValue="_selectedItem"
                 SelectedValueChanged="async (item) => await OnItemSelected(item)">
            @foreach(var layerName in _tocElements.Keys.Order())
            {
                <MudListItem Value="_tocElements[layerName]">
                    @layerName.Replace("/", " > ")
                </MudListItem>
            }
        </MudList>

    </DialogBody>
    <DialogButtons>
        @if ((_selectedItem as ITocElement)?.Layers?.Count() > 0) 
        {
            <MudButton Variant="Variant.Filled" Color="Color.Primary"
                       OnClick="Apply">Select: @(((ITocElement)_selectedItem).Name)</MudButton>
        }
    </DialogButtons>
</ModalDialogFormBase>

@code {
    private Dictionary<string, ITocElement> _tocElements = new();
    private ITocElement? _selectedItem;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (Model.Map?.TOC is IToc toc)
        {
            foreach(var element in toc.Elements.Where(e => e is not IGroupLayer))
            {
                if(Model.LayerFilter?.Invoke(element.Layers.FirstOrDefault()) == false)
                {
                    continue;
                }

                _tocElements.Add(
                        element.FullName(), 
                        element
                );
            }
        }
    }

    private Task Apply()
    {
        Model.SelectedLayers = _selectedItem?.Layers.ToArray();

        return base.Submit();
    }

    private Task OnItemSelected(ITocElement item)
    {
        _selectedItem = item;   
        return Apply();
    }
}